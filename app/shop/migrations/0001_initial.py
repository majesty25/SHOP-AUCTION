# Generated by Django 3.1.7 on 2023-10-15 13:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import shop.models.base_models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required, unique, max-255', max_length=255, unique=True, verbose_name='brand name')),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required, max-100', max_length=100, verbose_name='category name')),
                ('slug', models.SlugField(help_text='format: required, letters, numbers, underscore, or hyphens', max_length=150, verbose_name='category safe URL')),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_nav', models.BooleanField(default=False)),
                ('nav_order', models.IntegerField(default=0)),
                ('featured_name', models.CharField(blank=True, default='', max_length=150, null=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, help_text='format: not required', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='shop.category', verbose_name='parent of category')),
            ],
            options={
                'verbose_name': 'product category',
                'verbose_name_plural': 'product categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='format: required, letters, numbers, underscores or hyphens', max_length=255, verbose_name='product safe URL')),
                ('name', models.CharField(help_text='format: required, max-255', max_length=255, verbose_name='product name')),
                ('description', models.TextField(help_text='format: required', verbose_name='product description')),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=True)),
                ('edited', models.BooleanField(default=False)),
                ('priority', models.IntegerField(default=0)),
                ('starting_price', models.DecimalField(blank=True, decimal_places=2, error_messages={'name': {'max_length': 'the price must be between 0 and 999999.99.'}}, help_text='format: maximum price 999999.99', max_digits=8, null=True)),
                ('reserve_price_status', models.BooleanField(default=False)),
                ('reserve_price', models.DecimalField(decimal_places=2, default=0.0, error_messages={'name': {'max_length': 'the price must be between 0 and 999999.99.'}}, help_text='format: maximum price 999999.99', max_digits=8)),
                ('buy_now_status', models.BooleanField(default=False)),
                ('buy_now_price', models.DecimalField(decimal_places=2, default=0.0, error_messages={'name': {'max_length': 'the price must be between 0 and 999999.99.'}}, help_text='format: maximum price 999999.99', max_digits=8)),
                ('buyer_deposit_status', models.BooleanField(default=False)),
                ('buyer_deposit_type', models.CharField(choices=[('amount_bidding', 'amount_bidding'), ('percentage', 'percentage'), ('custom_amount', 'custom_amount')], default='amount_bidding', max_length=225)),
                ('buyer_deposit', models.DecimalField(decimal_places=2, default=0.0, error_messages={'name': {'max_length': 'the price must be between 0 and 999999.99.'}}, help_text='format: maximum price 999999.99', max_digits=8)),
                ('region', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='format: Y-m-d H:M:S', verbose_name='date product created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='format: Y-m-d H:M:S', verbose_name='date product last updated')),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('bidding_step', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required, unique, max-255', max_length=255, unique=True, verbose_name='product attribute name')),
                ('slug', models.SlugField(help_text='format: required, letters, numbers, underscore, or hyphens', max_length=150, unique=True, verbose_name='product attribute safe URL')),
                ('is_color', models.BooleanField(default=False)),
                ('is_size', models.BooleanField(default=False)),
                ('description', models.TextField(help_text='format: required', verbose_name='product attribute description')),
                ('category', mptt.fields.TreeManyToManyField(to='shop.Category')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_value', models.CharField(help_text='format: required, max-255', max_length=255, verbose_name='attribute value')),
                ('product_attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_attribute', to='shop.productattribute')),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required, unique, max-255', max_length=255, unique=True, verbose_name='type of product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttributeValues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attributevalues', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attributevaluess', to='shop.productattributevalue')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productattributevaluess', to='shop.product')),
            ],
            options={
                'unique_together': {('attributevalues', 'product')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='attribute_values',
            field=models.ManyToManyField(related_name='product_attribute_values', through='shop.ProductAttributeValues', to='shop.ProductAttributeValue'),
        ),
        migrations.AddField(
            model_name='product',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='brand', to='shop.brand'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=mptt.fields.TreeManyToManyField(to='shop.Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_type', to='shop.producttype'),
        ),
        migrations.AddField(
            model_name='product',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='images/default.png', help_text='format: required, default-default.png', upload_to=shop.models.base_models.product_image_file_path, verbose_name='product image')),
                ('thumbnail', models.ImageField(blank=True, default='images/default.png', help_text='format: required, default-default.png', upload_to=shop.models.base_models.product_image_file_path_thumb, verbose_name='product image thumbnail')),
                ('small_image', models.ImageField(blank=True, default='images/default.png', help_text='format: required, default-default.png', upload_to=shop.models.base_models.product_image_file_path_small, verbose_name='product image small')),
                ('alt_text', models.CharField(help_text='format: required, max-255', max_length=255, verbose_name='alternative text')),
                ('is_featured', models.BooleanField(default=True, help_text='format: default=false, true=default image', verbose_name='show product image')),
                ('default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='format: Y-m-d H:M:S', verbose_name='product visibility')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='format: Y-m-d H:M:S', verbose_name='date sub-product created')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media_product', to='shop.product')),
            ],
            options={
                'verbose_name': 'product image',
                'verbose_name_plural': 'product images',
            },
            bases=(models.Model, shop.models.base_models.ResizeImageMixin),
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('bid_time', models.DateTimeField(auto_now_add=True)),
                ('bid_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('auction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='shop.product')),
                ('bidder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bidder', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('user', 'slug')},
        ),
    ]
